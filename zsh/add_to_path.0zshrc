
##
# Adds item to BEGINNING of PATH and removes it elsewhere in the PATH
# if it exists.
# 
# Arguments
#  1) The component to add to the PATH.  Must be a directory
#     or function will return with a no-op.
#  2) The variable to set the resulting value to.  Default is 
#     "PATH".  Essentially we just `export $2=$result`
#     rather than always setting $PATH.  This way you can
#     use add_to_path to set MANPATH, PERL5LIB, etc.
#  3) The initial starting PATH variable value.  Default is the
#     export()ed  variable found in the environment according
#     to arg2.
#
# The second and third arguments are primarily used for testing.
#
# Pre:  _sed() command exists
##
add_to_path() {
    local component="$1"
    local outpath="$2"; [ -z "$outpath" ] && outpath="PATH"
    local mypath="$3";  [ -z "$mypath"  ] &&  eval mypath=\$$outpath

    
    if [ ! -d "$component" ]; then
        return
    fi
    
    local out="$(echo "$mypath" | _sed "s%$component\(:|\$\)%%" \
                                | _sed "s%:\$%%")"
    if [ -z "$out" ]; then
        out="$component"
    else
        out="$component:$out"
    fi
    
    export $outpath="$out"
}

add_to_manpath() {
    add_to_path "$1" MANPATH
}
