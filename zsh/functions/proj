# Inside an anonymous function block so variables can be local
# 
# TODO: how to make __proj_gothere() not exported to the shell namespace
{

__proj_gothere() {
    local newproj="$1"
    local banner="$newproj"
    
    if [ -L "$newproj" ]; then
        pushd "$newproj"
        newproj=$(pwd -P)
        banner="${_BOLDCYAN}$banner${_BOLDWHITE} -> ${_BOLDYELLOW}$newproj"
        popd
    fi
    
    echo -e "${_BOLDYELLOW}${banner}${_COLOR_RESET}"
    cd "$newproj"
    
    gls -F --color
}


[ -z "$PROJECTS" ] && local PROJECTS="$HOME/Projects"
local PROJECT="$1"

# if was invoked without an argument, then just go to the PROJECTS
if [ -z "$PROJECT" ]; then
    __proj_gothere "${PROJECTS}"
    return
fi

# Look and see how many projects match the indicated project
nmatch=$(/bin/ls "${PROJECTS}" | grep -E -i "^${PROJECT}"  \
                               | wc -l)

# If one match, then just go there
if [[ "${nmatch}" =~ "1" ]]; then
    local match=$(/bin/ls "${PROJECTS}" | grep -E -i "^${PROJECT}")
    __proj_gothere "${PROJECTS}/${match}"
    return
fi

# If no match, then nop
if [[ "${nmatch}" =~ "0" ]]; then
    echo -e "${_BOLDYELLOW}No match for $PROJECT${_COLOR_RESET}"
    return
fi

# TODO: should allow more flexible matching
# 
# Like maybe this perl?
# 
#   sub to_rex {
#       my ($str) = @_;
#       my @chars = split '', $str;
#       return join('.*', @chars);
#   }
#   
#   my $rex = to_rex $str;
#   
#   my @dict = glob('*'); # <*> ?
#   
#   my @matches = grep /$rex/, @dict;
#   print join("\n",@matches)
# 

# Else there's more than one match, so ask for it
/bin/ls "$PROJECTS" \
    | grep -i --color=always "^$PROJECT" \
    | cat -n  \
    | _sed "s/^[[:space:]]*([[:digit:]]+)[[:space:]]*/\1) /g"
num=
read num
newproj=$(/bin/ls "$PROJECTS" \
    | grep -E -i "^$PROJECT" \
    | cat -n  \
    | _sed "s/^[[:space:]]*([[:digit:]]+)[[:space:]]*/\1) /g" \
    | grep -E "^[[:space:]]*$num\)[[:space:]]*" \
    | _sed "s/^[[:space:]]*[[:digit:]]+\)[[:space:]]*//g")

__proj_gothere "${PROJECTS}/${newproj}"
return

} 
